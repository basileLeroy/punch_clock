function redirectCustomButtonToDefaultAction(customButton,defaultButton){customButton&&defaultButton&&customButton.addEventListener("click",(function(){defaultButton.click()}))}function updateButtonVisibility(button,counterElement,maxCount){if(parseInt(counterElement.value,10)>=maxCount){button.parentElement.parentElement.className="d-none"}}define("mod_punchclock/punchclock_setup",[],(function(){return{init:function(){let addTimeBlockDefaultButton=document.getElementById("id_timeblock_add_fields"),addTimeBlockCustomButton=document.getElementById("add-timeblock-button"),addExceptionDefaultButton=document.getElementById("id_exception_add_fields"),addExceptionCustomButton=document.getElementById("add-holiday-button");[addExceptionDefaultButton,addTimeBlockDefaultButton].forEach((button=>{button&&(button.parentElement.parentElement.className="d-none")})),redirectCustomButtonToDefaultAction(addTimeBlockCustomButton,addTimeBlockDefaultButton),redirectCustomButtonToDefaultAction(addExceptionCustomButton,addExceptionDefaultButton);const timeblockCounter=document.querySelector('[name="timeblock_repeats"]'),exceptionsCounter=document.querySelector('[name="exception_repeats"]');updateButtonVisibility(addTimeBlockCustomButton,timeblockCounter,2),updateButtonVisibility(addExceptionCustomButton,exceptionsCounter,4)}}}));

//# sourceMappingURL=punchclock_setup.min.js.map