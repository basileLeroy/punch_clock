{"version":3,"file":"punchclock.min.js","sources":["../src/punchclock.js"],"sourcesContent":["/**\n * @module mod_punchclock/punchclock\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n * Initialize punchclock timer, handle click events and send to DB via AJAX\n */\nexport const init = () => {\n    const clockIds = ['morning-start', 'afternoon-start'];\n    const intervals = {};\n\n    clockIds.forEach(type => {\n        const clock = document.getElementById(`clock-${type}`);\n        const button = document.getElementById(`punchclock-button-${type}`);\n        /**\n         * Update each clocks with current time\n        */\n       function updateClock() {\n           const now = new Date();\n           clock.innerText = now.toLocaleTimeString();\n        }\n        updateClock(); // Set initial time immediately\n        intervals[type] = setInterval(updateClock, 1000); // Store interval to catch\n\n        // Stop clock on click\n        button.addEventListener('click', () => {\n            clearInterval(intervals[type]);\n            button.disabled = true;\n\n            const punchedTime = clock.innerText;\n            const courseId = button.dataset.courseid;\n            const punchclockId = parseInt(button.dataset.punchclockid, 10);\n\n            // Send AJAX request to log punch time\n            Ajax.call([{\n                methodname: 'mod_punchclock_log_punch',\n                args: {\n                    courseid: courseId,\n                    punchclockid: punchclockId,\n                    type: type,\n                    time: punchedTime\n                }\n            }])[0].then(response => {\n                console.log('Punch logged:', response);\n            }).catch(Notification.exception);\n        });\n    });\n};\n"],"names":["intervals","forEach","type","clock","document","getElementById","button","updateClock","now","Date","innerText","toLocaleTimeString","setInterval","addEventListener","clearInterval","disabled","punchedTime","courseId","dataset","courseid","punchclockId","parseInt","punchclockid","call","methodname","args","time","then","response","console","log","catch","Notification","exception"],"mappings":"4XAUoB,WAEVA,UAAY,GADD,CAAC,gBAAiB,mBAG1BC,SAAQC,aACPC,MAAQC,SAASC,eAAgB,SAAQH,QACzCI,OAASF,SAASC,eAAgB,qBAAoBH,iBAIpDK,oBACCC,IAAM,IAAIC,KAChBN,MAAMO,UAAYF,IAAIG,qBAEzBJ,cACAP,UAAUE,MAAQU,YAAYL,YAAa,KAG3CD,OAAOO,iBAAiB,SAAS,KAC7BC,cAAcd,UAAUE,OACxBI,OAAOS,UAAW,QAEZC,YAAcb,MAAMO,UACpBO,SAAWX,OAAOY,QAAQC,SAC1BC,aAAeC,SAASf,OAAOY,QAAQI,aAAc,kBAGtDC,KAAK,CAAC,CACPC,WAAY,2BACZC,KAAM,CACFN,SAAUF,SACVK,aAAcF,aACdlB,KAAMA,KACNwB,KAAMV,gBAEV,GAAGW,MAAKC,WACRC,QAAQC,IAAI,gBAAiBF,aAC9BG,MAAMC,sBAAaC"}