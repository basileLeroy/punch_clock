{"version":3,"file":"datepicker.min.js","sources":["../src/datepicker.js"],"sourcesContent":["define([], function() {\n    return {\n        init: function() {\n            const datepicker = document.querySelector('.datepicker');\n            const dateInput = document.querySelector('.date-input');\n\n            // Exit if elements are missing\n            if (!datepicker || !dateInput) {\n                return;\n            }\n\n            const yearInput = datepicker.querySelector('.year-input');\n            const monthInput = datepicker.querySelector('.month-input');\n            const applyBtn = datepicker.querySelector('.apply');\n            const cancelBtn = datepicker.querySelector('.cancel');\n            const prevBtn = datepicker.querySelector(\".prev\");\n            const nextBtn = datepicker.querySelector(\".next\");\n            const dates = datepicker.querySelector(\".dates\");\n\n            if (!yearInput || !monthInput || !applyBtn || !cancelBtn || !prevBtn || !nextBtn || !dates) {\n                return;\n            }\n\n            let selectedDate = new Date();\n            let year = selectedDate.getFullYear();\n            let month = selectedDate.getMonth();\n\n            /**\n             * Updates the year and month input fields to match the selected date.\n             */\n            const updateYearMonth = () => {\n                monthInput.selectedIndex = month;\n                yearInput.value = year;\n            };\n\n            /**\n             * Handles click event on a date button to update the selected date.\n             *\n             * @param {Event} event - The click event object.\n             */\n            const handleDateClick = (event) => {\n                event.preventDefault();\n                const button = event.target;\n\n                const selected = dates.querySelector('.selected');\n                if (selected) {\n                    selected.classList.remove(\"selected\");\n                }\n\n                button.classList.add(\"selected\");\n                selectedDate = new Date(year, month, parseInt(button.textContent));\n            };\n\n            /**\n             * Creates a button element for a date in the calendar.\n             *\n             * @param {number} text - The text content of the button (day of the month).\n             * @param {boolean} [isDisabled=false] - Whether the button should be disabled.\n             * @param {boolean} [isToday=false] - Whether the button represents today's date.\n             * @returns {HTMLButtonElement} - The created button element.\n             */\n            const createBtn = (text, isDisabled = false, isToday = false) => {\n                const btn = document.createElement('button');\n                btn.textContent = text;\n                btn.disabled = isDisabled;\n                btn.classList.toggle(\"today\", isToday);\n                return btn;\n            };\n\n            /**\n             * Displays the calendar dates for the selected month and year.\n             */\n            const displayDates = () => {\n                updateYearMonth();\n                dates.innerHTML = \"\";\n\n                const lastOfPrevMonth = new Date(year, month, 0);\n                for (let i = 0; i <= lastOfPrevMonth.getDay(); i++) {\n                    const text = lastOfPrevMonth.getDate() - lastOfPrevMonth.getDay() + i;\n                    const button = createBtn(text, true, false);\n                    dates.appendChild(button);\n                }\n\n                const lastOfMonth = new Date(year, month + 1, 0);\n                for (let i = 1; i <= lastOfMonth.getDate(); i++) {\n                    const isToday =\n                        selectedDate.getDate() === i &&\n                        selectedDate.getFullYear() === year &&\n                        selectedDate.getMonth() === month;\n\n                    const button = createBtn(i, false, isToday);\n                    button.addEventListener(\"click\", handleDateClick);\n                    dates.appendChild(button);\n                }\n\n                const firstOfNextMonth = new Date(year, month + 1, 1);\n                for (let i = firstOfNextMonth.getDay(); i < 7; i++) {\n                    const text = firstOfNextMonth.getDate() - firstOfNextMonth.getDay() + i;\n                    const button = createBtn(text, true, false);\n                    dates.appendChild(button);\n                }\n            };\n\n            displayDates();\n\n            /**\n             * Handles the change event for the month selector.\n             */\n            monthInput.addEventListener('change', (event) => {\n                event.preventDefault();\n                month = monthInput.selectedIndex;\n                displayDates();\n            });\n\n            /**\n             * Handles the change event for the year input field.\n             */\n            yearInput.addEventListener('change', (event) => {\n                event.preventDefault();\n                year = yearInput.value;\n                displayDates();\n            });\n\n            /**\n             * Handles the click event for the next button, moving to the next month.\n             */\n            nextBtn.addEventListener('click', (event) => {\n                event.preventDefault();\n                if (month === 11) {\n                    year++;\n                }\n                month = (month + 1) % 12;\n                displayDates();\n            });\n\n            /**\n             * Handles the click event for the previous button, moving to the previous month.\n             */\n            prevBtn.addEventListener('click', (event) => {\n                event.preventDefault();\n                if (month === 0) {\n                    year--;\n                }\n                month = (month - 1 + 12) % 12;\n                displayDates();\n            });\n\n            /**\n             * Handles the click event on the date input field to toggle the datepicker.\n             */\n            dateInput.addEventListener('click', (event) => {\n                event.preventDefault();\n                datepicker.hidden = !datepicker.hidden;\n            });\n\n            /**\n             * Handles the click event for the apply button, updating the date and reloading the page.\n             */\n            applyBtn.addEventListener('click', (event) => {\n                event.preventDefault();\n\n                const unixTimestamp = Math.floor(Date.UTC(\n                    selectedDate.getFullYear(),\n                    selectedDate.getMonth(),\n                    selectedDate.getDate(),\n                    selectedDate.getHours(),\n                    selectedDate.getMinutes(),\n                    selectedDate.getSeconds()\n                ) / 1000);\n\n                const url = new URL(window.location);\n                const params = new URLSearchParams(url.search);\n\n                params.set(\"date\", unixTimestamp);\n                window.location.href = `${url.pathname}?${params.toString()}`;\n\n                datepicker.hidden = true;\n            });\n\n            /**\n             * Handles the click event for the cancel button, hiding the datepicker.\n             */\n            cancelBtn.addEventListener('click', (event) => {\n                event.preventDefault();\n                datepicker.hidden = true;\n            });\n        }\n    };\n});\n"],"names":["define","init","datepicker","document","querySelector","dateInput","yearInput","monthInput","applyBtn","cancelBtn","prevBtn","nextBtn","dates","selectedDate","Date","year","getFullYear","month","getMonth","handleDateClick","event","preventDefault","button","target","selected","classList","remove","add","parseInt","textContent","createBtn","text","isDisabled","isToday","btn","createElement","disabled","toggle","displayDates","selectedIndex","value","innerHTML","lastOfPrevMonth","i","getDay","getDate","appendChild","lastOfMonth","addEventListener","firstOfNextMonth","hidden","unixTimestamp","Math","floor","UTC","getHours","getMinutes","getSeconds","url","URL","window","location","params","URLSearchParams","search","set","href","pathname","toString"],"mappings":"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"}